
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      appSkin
 *  Source:     C:\Documents and Settings\zjp\workspace\gReader AIR\src\appSkin.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.03.11 16:15:41 CST
 */

package 
{

import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.mx_internal;
import mx.filters.*;
import mx.graphics.GradientEntry;
import mx.graphics.LinearGradient;
import mx.graphics.LinearGradientStroke;
import mx.graphics.SolidColorStroke;
import mx.states.AddItems;
import mx.states.SetProperty;
import mx.states.State;
import mx.styles.*;
import spark.components.Group;
import spark.components.Label;
import spark.layouts.VerticalLayout;
import spark.primitives.Rect;
import spark.skins.SparkSkin;


[HostComponent("spark.components.WindowedApplication")]
[States("normal", "disabled", "normalAndInactive", "disabledAndInactive")]

//  begin class def
public class appSkin
    extends spark.skins.SparkSkin
    implements mx.core.IStateClient2
{

    //  instance variables
    [Inspectable]
    [Bindable]
/**
 * @private
 **/
    public var _appSkin_Group1 : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var backgroundRect : spark.primitives.Rect;

    [Bindable]
	/**
 * @private
 **/
    public var contentGroup : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var statusBar : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var statusText : spark.components.Label;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function appSkin()
    {
        super();





        // layer initializers

       
        // properties
        this.mxmlContent = [_appSkin_Rect1_i(), _appSkin_Group1_i()];
        this.currentState = "normal";


        // events

		var _appSkin_Group3_factory:DeferredInstanceFromFunction = 
		  new mx.core.DeferredInstanceFromFunction(_appSkin_Group3_i);


		states = [
		  new State ({
		    name: "normal",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "disabled",
		    stateGroups: ['disabledGroup'],
		    overrides: [
		      new AddItems().initializeFromObject({
		        itemsFactory: _appSkin_Group3_factory,
		        destination: "_appSkin_Group1",
		        propertyName: "mxmlContent",
		        position: "after",
		        relativeTo: ["contentGroup"]
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        name: "alpha",
		        value: 0.5
		      })
		    ]
		  })
		  ,
		  new State ({
		    name: "normalAndInactive",
		    stateGroups: ['inactiveGroup'],
		    overrides: [
		      new AddItems().initializeFromObject({
		        itemsFactory: _appSkin_Group3_factory,
		        destination: "_appSkin_Group1",
		        propertyName: "mxmlContent",
		        position: "after",
		        relativeTo: ["contentGroup"]
		      })
		    ]
		  })
		  ,
		  new State ({
		    name: "disabledAndInactive",
		    stateGroups: ['inactiveGroup','disabledGroup'],
		    overrides: [
		      new AddItems().initializeFromObject({
		        itemsFactory: _appSkin_Group3_factory,
		        destination: "_appSkin_Group1",
		        propertyName: "mxmlContent",
		        position: "after",
		        relativeTo: ["contentGroup"]
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        name: "alpha",
		        value: 0.5
		      })
		    ]
		  })
		];









    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 47 - 84

        /*  Define the skin elements that should not be colorized. 
         *  For WindowedApplication, border and status bar background are colorized,
         *  but the content area and status text are not. 
         *  Exclude the titleBar and scroller because they are SparkSkins and we 
         *  don't want to colorize them twice.
         * 
         * @langversion 3.0
         * @playerversion Flash 10
         * @playerversion AIR 1.5
         * @productversion Flex 4 
         */
        static private const exclusions:Array = ["backgroundRect", "contentGroup", "statusText"];
        
        /**
         * @private
         */
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        } 
        
        /**
         *  @private
         */
        override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
        {
        //    backgroundFill.color = getStyle("backgroundColor");
        //    backgroundFill.alpha = getStyle("backgroundAlpha");
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
    

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _appSkin_Rect1_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.right = 0;
	temp.top = 0;
	temp.bottom = 0;
	temp.radiusX = 20;
	temp.radiusY = 20;
	temp.fill = _appSkin_LinearGradient1_c();
	temp.stroke = _appSkin_SolidColorStroke1_c();
	temp.initialized(this, "backgroundRect")
	backgroundRect = temp;
	mx.binding.BindingManager.executeBindings(this, "backgroundRect", backgroundRect);
	return temp;
}

private function _appSkin_LinearGradient1_c() : mx.graphics.LinearGradient
{
	var temp : mx.graphics.LinearGradient = new mx.graphics.LinearGradient();
	temp.rotation = 90;
	temp.entries = [_appSkin_GradientEntry1_c(), _appSkin_GradientEntry2_c()];
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_GradientEntry1_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 0;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_GradientEntry2_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 16777215;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_SolidColorStroke1_c() : mx.graphics.SolidColorStroke
{
	var temp : mx.graphics.SolidColorStroke = new mx.graphics.SolidColorStroke();
	temp.color = 0;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_Group1_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.left = 0;
	temp.right = 0;
	temp.top = 0;
	temp.bottom = 0;
	temp.minHeight = 24;
	temp.minWidth = 0;
	temp.layout = _appSkin_VerticalLayout1_c();
	temp.mxmlContent = [_appSkin_Group2_i()];
	temp.id = "_appSkin_Group1";
	if (!temp.document) temp.document = this;
	_appSkin_Group1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_appSkin_Group1", _appSkin_Group1);
	return temp;
}

private function _appSkin_VerticalLayout1_c() : spark.layouts.VerticalLayout
{
	var temp : spark.layouts.VerticalLayout = new spark.layouts.VerticalLayout();
	temp.gap = 0;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_Group2_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.minHeight = 0;
	temp.minWidth = 0;
	temp.id = "contentGroup";
	if (!temp.document) temp.document = this;
	contentGroup = temp;
	mx.binding.BindingManager.executeBindings(this, "contentGroup", contentGroup);
	return temp;
}

private function _appSkin_Group3_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.percentWidth = 100.0;
	temp.minHeight = 24;
	temp.mxmlContent = [_appSkin_Rect2_c(), _appSkin_Rect3_c(), _appSkin_Label1_i()];
	temp.id = "statusBar";
	if (!temp.document) temp.document = this;
	statusBar = temp;
	mx.binding.BindingManager.executeBindings(this, "statusBar", statusBar);
	return temp;
}

private function _appSkin_Rect2_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.right = 0;
	temp.top = 0;
	temp.bottom = 0;
	temp.fill = _appSkin_LinearGradient2_c();
	temp.initialized(this, null)
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_LinearGradient2_c() : mx.graphics.LinearGradient
{
	var temp : mx.graphics.LinearGradient = new mx.graphics.LinearGradient();
	temp.rotation = 90;
	temp.entries = [_appSkin_GradientEntry3_c(), _appSkin_GradientEntry4_c()];
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_GradientEntry3_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 14869218;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_GradientEntry4_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 14277081;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_Rect3_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 1;
	temp.right = 1;
	temp.top = 1;
	temp.bottom = 0;
	temp.stroke = _appSkin_LinearGradientStroke1_c();
	temp.initialized(this, null)
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_LinearGradientStroke1_c() : mx.graphics.LinearGradientStroke
{
	var temp : mx.graphics.LinearGradientStroke = new mx.graphics.LinearGradientStroke();
	temp.rotation = 90;
	temp.weight = 1;
	temp.entries = [_appSkin_GradientEntry5_c(), _appSkin_GradientEntry6_c()];
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_GradientEntry5_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 15395562;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_GradientEntry6_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 12500670;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _appSkin_Label1_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.top = 2;
	temp.bottom = 2;
	temp.left = 10;
	temp.right = 10;
	temp.percentWidth = 100.0;
	temp.maxDisplayedLines = 1;
	temp.setStyle("verticalAlign", "middle");
	temp.setStyle("fontSize", 10);
	temp.setStyle("color", 5789784);
	temp.id = "statusText";
	if (!temp.document) temp.document = this;
	statusText = temp;
	mx.binding.BindingManager.executeBindings(this, "statusText", statusText);
	return temp;
}





    //  embed carrier vars
    //  end embed carrier vars


//  end class def
}

//  end package def
}
