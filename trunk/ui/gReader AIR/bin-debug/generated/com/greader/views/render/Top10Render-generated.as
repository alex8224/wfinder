
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    com.greader.views.render
 *  Class:      Top10Render
 *  Source:     C:\Documents and Settings\zjp\workspace\gReader AIR\src\com\greader\views\render\Top10Render.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.04.02 12:15:25 CST
 */

package com.greader.views.render
{

import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.controls.Image;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.mx_internal;
import mx.filters.*;
import mx.graphics.SolidColor;
import mx.states.SetProperty;
import mx.states.State;
import mx.states.Transition;
import mx.styles.*;
import spark.components.Group;
import spark.components.HGroup;
import spark.components.Label;
import spark.components.VGroup;
import spark.components.supportClasses.ItemRenderer;
import spark.effects.Animate;
import spark.effects.animation.SimpleMotionPath;
import spark.filters.DropShadowFilter;
import spark.layouts.BasicLayout;
import spark.primitives.Rect;


[States("normal", "selected", "hovered")]

//  begin class def
public class Top10Render
    extends spark.components.supportClasses.ItemRenderer
    implements mx.binding.IBindingClient, mx.core.IStateClient2
{

    //  instance variables
/**
 * @private
 **/
    public var _Top10Render_Animate1 : spark.effects.Animate;

/**
 * @private
 **/
    public var _Top10Render_Animate2 : spark.effects.Animate;

/**
 * @private
 **/
    public var _Top10Render_Animate3 : spark.effects.Animate;

/**
 * @private
 **/
    public var _Top10Render_Animate4 : spark.effects.Animate;

    [Bindable]
	/**
 * @private
 **/
    public var flightPlan : mx.graphics.SolidColor;

    [Bindable]
	/**
 * @private
 **/
    public var iconFile : mx.controls.Image;

    [Bindable]
	/**
 * @private
 **/
    public var normalType : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var seqArea : spark.primitives.Rect;

    [Bindable]
	/**
 * @private
 **/
    public var seqnum : spark.components.Label;

    [Bindable]
	/**
 * @private
 **/
    public var txtFileName : spark.components.Label;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function Top10Render()
    {
        super();



		var bindings:Array = _Top10Render_bindingsSetup();
		var watchers:Array = [];

		var target:Object = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_com_greader_views_render_Top10RenderWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					function(propertyName:String):* { return Top10Render[propertyName]; },
					bindings,
					watchers);

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.autoDrawBackground = false;
        this.percentWidth = 98.0;
        this.height = 36;
        this.verticalCenter = 0;
        this.transitions = [_Top10Render_Transition1_c(), _Top10Render_Transition2_c(), _Top10Render_Transition3_c(), _Top10Render_Transition4_c()];
        this.mxmlContent = [_Top10Render_VGroup1_c()];
        this.currentState = "normal";


        // events



		states = [
		  new State ({
		    name: "normal",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "selected",
		    overrides: [
		      new mx.states.SetProperty().initializeFromObject({
		        target: "flightPlan",
		        name: "alpha",
		        value: 1
		      })
		    ]
		  })
		  ,
		  new State ({
		    name: "hovered",
		    overrides: [
		      new mx.states.SetProperty().initializeFromObject({
		        target: "flightPlan",
		        name: "color",
		        value: 6315871
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        target: "flightPlan",
		        name: "alpha",
		        value: 0.9
		      })
		    ]
		  })
		];







		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 7 - 26

			import com.greader.util;
			
			import mx.events.FlexEvent;
			override public function set data(value:Object):void
			{				
					iconFile.visible=true;
					txtFileName.visible=true;
					var newBmp:Bitmap=new Bitmap(util.getBmpData(value.fullpath+"\\"+value.fname));
					if(newBmp!=null)
					{
						iconFile.source=newBmp;					
					}
					txtFileName.text=value.fname.toString().substring(0,20);
					if(value.fname.toString().length>20)
						txtFileName.text+="......";
					this.toolTip=value.fullpath;	
					this.seqnum.text=value.seq;
			}
		

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _Top10Render_Transition1_c() : mx.states.Transition
{
	var temp : mx.states.Transition = new mx.states.Transition();
	temp.fromState = "normal";
	temp.toState = "hovered";
	temp.effect = _Top10Render_Animate1_i();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Animate1_i() : spark.effects.Animate
{
	var temp : spark.effects.Animate = new spark.effects.Animate();
	temp.duration = 200;
	temp.motionPaths = new <spark.effects.animation.MotionPath>[_Top10Render_SimpleMotionPath1_c()];
	_Top10Render_Animate1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_Top10Render_Animate1", _Top10Render_Animate1);
	return temp;
}

private function _Top10Render_SimpleMotionPath1_c() : spark.effects.animation.SimpleMotionPath
{
	var temp : spark.effects.animation.SimpleMotionPath = new spark.effects.animation.SimpleMotionPath();
	temp.property = "alpha";
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Transition2_c() : mx.states.Transition
{
	var temp : mx.states.Transition = new mx.states.Transition();
	temp.fromState = "hovered";
	temp.toState = "normal";
	temp.effect = _Top10Render_Animate2_i();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Animate2_i() : spark.effects.Animate
{
	var temp : spark.effects.Animate = new spark.effects.Animate();
	temp.duration = 200;
	temp.motionPaths = new <spark.effects.animation.MotionPath>[_Top10Render_SimpleMotionPath2_c()];
	_Top10Render_Animate2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_Top10Render_Animate2", _Top10Render_Animate2);
	return temp;
}

private function _Top10Render_SimpleMotionPath2_c() : spark.effects.animation.SimpleMotionPath
{
	var temp : spark.effects.animation.SimpleMotionPath = new spark.effects.animation.SimpleMotionPath();
	temp.property = "alpha";
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Transition3_c() : mx.states.Transition
{
	var temp : mx.states.Transition = new mx.states.Transition();
	temp.fromState = "normal";
	temp.toState = "selected";
	temp.effect = _Top10Render_Animate3_i();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Animate3_i() : spark.effects.Animate
{
	var temp : spark.effects.Animate = new spark.effects.Animate();
	temp.duration = 200;
	temp.motionPaths = new <spark.effects.animation.MotionPath>[_Top10Render_SimpleMotionPath3_c()];
	_Top10Render_Animate3 = temp;
	mx.binding.BindingManager.executeBindings(this, "_Top10Render_Animate3", _Top10Render_Animate3);
	return temp;
}

private function _Top10Render_SimpleMotionPath3_c() : spark.effects.animation.SimpleMotionPath
{
	var temp : spark.effects.animation.SimpleMotionPath = new spark.effects.animation.SimpleMotionPath();
	temp.property = "alpha";
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Transition4_c() : mx.states.Transition
{
	var temp : mx.states.Transition = new mx.states.Transition();
	temp.fromState = "selected";
	temp.toState = "normal";
	temp.effect = _Top10Render_Animate4_i();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Animate4_i() : spark.effects.Animate
{
	var temp : spark.effects.Animate = new spark.effects.Animate();
	temp.duration = 200;
	temp.motionPaths = new <spark.effects.animation.MotionPath>[_Top10Render_SimpleMotionPath4_c()];
	_Top10Render_Animate4 = temp;
	mx.binding.BindingManager.executeBindings(this, "_Top10Render_Animate4", _Top10Render_Animate4);
	return temp;
}

private function _Top10Render_SimpleMotionPath4_c() : spark.effects.animation.SimpleMotionPath
{
	var temp : spark.effects.animation.SimpleMotionPath = new spark.effects.animation.SimpleMotionPath();
	temp.property = "alpha";
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_VGroup1_c() : spark.components.VGroup
{
	var temp : spark.components.VGroup = new spark.components.VGroup();
	temp.percentWidth = 100.0;
	temp.gap = 5;
	temp.percentHeight = 100.0;
	temp.mxmlContent = [_Top10Render_HGroup1_c()];
	if (!temp.document) temp.document = this;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_HGroup1_c() : spark.components.HGroup
{
	var temp : spark.components.HGroup = new spark.components.HGroup();
	temp.verticalAlign = "middle";
	temp.percentWidth = 100.0;
	temp.horizontalAlign = "center";
	temp.filters = [_Top10Render_DropShadowFilter1_c()];
	temp.mxmlContent = [_Top10Render_Group1_i(), _Top10Render_Group2_c()];
	if (!temp.document) temp.document = this;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_DropShadowFilter1_c() : spark.filters.DropShadowFilter
{
	var temp : spark.filters.DropShadowFilter = new spark.filters.DropShadowFilter();
	temp.distance = 2;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Group1_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.height = 34;
	temp.percentWidth = 100.0;
	temp.mxmlContent = [_Top10Render_Rect1_c(), _Top10Render_Image1_i(), _Top10Render_Label1_i()];
	temp.id = "normalType";
	if (!temp.document) temp.document = this;
	normalType = temp;
	mx.binding.BindingManager.executeBindings(this, "normalType", normalType);
	return temp;
}

private function _Top10Render_Rect1_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.right = 0;
	temp.top = 0;
	temp.bottom = 0;
	temp.radiusX = 3;
	temp.radiusY = 3;
	temp.fill = _Top10Render_SolidColor1_i();
	temp.initialized(this, null)
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_SolidColor1_i() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 4802375;
	temp.alpha = 0;
	flightPlan = temp;
	mx.binding.BindingManager.executeBindings(this, "flightPlan", flightPlan);
	return temp;
}

private function _Top10Render_Image1_i() : mx.controls.Image
{
	var temp : mx.controls.Image = new mx.controls.Image();
	temp.height = 32;
	temp.width = 32;
	temp.left = 20;
	temp.id = "iconFile";
	if (!temp.document) temp.document = this;
	iconFile = temp;
	mx.binding.BindingManager.executeBindings(this, "iconFile", iconFile);
	return temp;
}

private function _Top10Render_Label1_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.left = 60;
	temp.verticalCenter = 2;
	temp.setStyle("color", 16777215);
	temp.setStyle("fontFamily", "微软雅黑");
	temp.id = "txtFileName";
	if (!temp.document) temp.document = this;
	txtFileName = temp;
	mx.binding.BindingManager.executeBindings(this, "txtFileName", txtFileName);
	return temp;
}

private function _Top10Render_Group2_c() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.layout = _Top10Render_BasicLayout1_c();
	temp.mxmlContent = [_Top10Render_Rect2_i(), _Top10Render_Label2_i()];
	if (!temp.document) temp.document = this;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_BasicLayout1_c() : spark.layouts.BasicLayout
{
	var temp : spark.layouts.BasicLayout = new spark.layouts.BasicLayout();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Rect2_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.width = 20;
	temp.height = 20;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.fill = _Top10Render_SolidColor2_c();
	temp.initialized(this, "seqArea")
	seqArea = temp;
	mx.binding.BindingManager.executeBindings(this, "seqArea", seqArea);
	return temp;
}

private function _Top10Render_SolidColor2_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 16711680;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Render_Label2_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.left = 5;
	temp.top = 3;
	temp.setStyle("color", 16777215);
	temp.setStyle("fontWeight", "bold");
	temp.setStyle("fontFamily", "微软雅黑");
	temp.setStyle("fontSize", 15);
	temp.id = "seqnum";
	if (!temp.document) temp.document = this;
	seqnum = temp;
	mx.binding.BindingManager.executeBindings(this, "seqnum", seqnum);
	return temp;
}


	//	binding mgmt
    private function _Top10Render_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            null,
            null,
            "_Top10Render_Animate1.target"
            , "flightPlan");

        result[1] = new mx.binding.Binding(this,
            null,
            null,
            "_Top10Render_Animate2.target"
            , "flightPlan");

        result[2] = new mx.binding.Binding(this,
            null,
            null,
            "_Top10Render_Animate3.target"
            , "flightPlan");

        result[3] = new mx.binding.Binding(this,
            null,
            null,
            "_Top10Render_Animate4.target"
            , "flightPlan");


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (Top10Render)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
