
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    com.greader.views.skin
 *  Class:      TopPanelSkin
 *  Source:     C:\Documents and Settings\zjp\workspace\gReader AIR\src\com\greader\views\skin\TopPanelSkin.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.04.02 12:15:26 CST
 */

package com.greader.views.skin
{

import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.display.DisplayObject;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.mx_internal;
import mx.filters.*;
import mx.graphics.GradientEntry;
import mx.graphics.LinearGradient;
import mx.graphics.LinearGradientStroke;
import mx.graphics.SolidColor;
import mx.states.AddItems;
import mx.states.SetProperty;
import mx.states.State;
import mx.styles.*;
import spark.components.Group;
import spark.components.Label;
import spark.filters.BlurFilter;
import spark.layouts.HorizontalLayout;
import spark.layouts.VerticalLayout;
import spark.primitives.Rect;
import spark.primitives.RectangularDropShadow;
import spark.skins.SparkSkin;


 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Panel")]
        
[States("normal", "disabled", "normalWithControlBar", "disabledWithControlBar")]

//  begin class def
public class TopPanelSkin
    extends spark.skins.SparkSkin
    implements mx.binding.IBindingClient, mx.core.IStateClient2
{

    //  instance variables
    [Inspectable]
    [Bindable]
/**
 * @private
 **/
    public var _TopPanelSkin_Group1 : spark.components.Group;

/**
 * @private
 **/
    public var _TopPanelSkin_Group8 : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var background : spark.primitives.Rect;

    [Bindable]
	/**
 * @private
 **/
    public var backgroundFill : mx.graphics.SolidColor;

    [Bindable]
	/**
 * @private
 **/
    public var bottomGroup : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var bottomGroupMask : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var bottomMaskRect : spark.primitives.Rect;

    [Bindable]
	/**
 * @private
 **/
    public var contentGroup : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var contents : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var controlBarGroup : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var dropShadow : spark.primitives.RectangularDropShadow;

    [Bindable]
	/**
 * @private
 **/
    public var lightTitle : spark.primitives.Rect;

    [Bindable]
	/**
 * @private
 **/
    public var tbDiv : spark.primitives.Rect;

    [Bindable]
	/**
 * @private
 **/
    public var tbHilite : spark.primitives.Rect;

    [Bindable]
	/**
 * @private
 **/
    public var titleDisplay : spark.components.Label;

    [Bindable]
	/**
 * @private
 **/
    public var titleLight : spark.primitives.Rect;

    [Bindable]
	/**
 * @private
 **/
    public var topGroup : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var topGroupMask : spark.components.Group;

    [Bindable]
	/**
 * @private
 **/
    public var topMaskRect : spark.primitives.Rect;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function TopPanelSkin()
    {
        super();



		var bindings:Array = _TopPanelSkin_bindingsSetup();
		var watchers:Array = [];

		var target:Object = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_com_greader_views_skin_TopPanelSkinWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					function(propertyName:String):* { return TopPanelSkin[propertyName]; },
					bindings,
					watchers);

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.blendMode = "normal";
        this.mouseEnabled = false;
        this.minWidth = 131;
        this.minHeight = 127;
        this.mxmlContent = [_TopPanelSkin_RectangularDropShadow1_i(), _TopPanelSkin_Rect1_i(), _TopPanelSkin_Group1_i(), _TopPanelSkin_Rect10_i()];
        this.currentState = "normal";


        // events

		var _TopPanelSkin_Group3_factory:DeferredInstanceFromFunction = 
		  new mx.core.DeferredInstanceFromFunction(_TopPanelSkin_Group3_i);
		var _TopPanelSkin_Group5_factory:DeferredInstanceFromFunction = 
		  new mx.core.DeferredInstanceFromFunction(_TopPanelSkin_Group5_i);
		var _TopPanelSkin_Group7_factory:DeferredInstanceFromFunction = 
		  new mx.core.DeferredInstanceFromFunction(_TopPanelSkin_Group7_i);


		states = [
		  new State ({
		    name: "normal",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "disabled",
		    overrides: [
		      new AddItems().initializeFromObject({
		        itemsFactory: _TopPanelSkin_Group5_factory,
		        destination: "contents",
		        propertyName: "mxmlContent",
		        position: "first"
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        name: "alpha",
		        value: 0.5
		      })
		    ]
		  })
		  ,
		  new State ({
		    name: "normalWithControlBar",
		    stateGroups: ['withControls'],
		    overrides: [
		      new AddItems().initializeFromObject({
		        itemsFactory: _TopPanelSkin_Group7_factory,
		        destination: "contents",
		        propertyName: "mxmlContent",
		        position: "after",
		        relativeTo: ["contentGroup"]
		      })
		      ,
		      new AddItems().initializeFromObject({
		        itemsFactory: _TopPanelSkin_Group5_factory,
		        destination: "contents",
		        propertyName: "mxmlContent",
		        position: "first"
		      })
		      ,
		      new AddItems().initializeFromObject({
		        itemsFactory: _TopPanelSkin_Group3_factory,
		        destination: "_TopPanelSkin_Group1",
		        propertyName: "mxmlContent",
		        position: "after",
		        relativeTo: ["topGroupMask"]
		      })
		    ]
		  })
		  ,
		  new State ({
		    name: "disabledWithControlBar",
		    stateGroups: ['withControls'],
		    overrides: [
		      new AddItems().initializeFromObject({
		        itemsFactory: _TopPanelSkin_Group7_factory,
		        destination: "contents",
		        propertyName: "mxmlContent",
		        position: "after",
		        relativeTo: ["contentGroup"]
		      })
		      ,
		      new AddItems().initializeFromObject({
		        itemsFactory: _TopPanelSkin_Group5_factory,
		        destination: "contents",
		        propertyName: "mxmlContent",
		        position: "first"
		      })
		      ,
		      new AddItems().initializeFromObject({
		        itemsFactory: _TopPanelSkin_Group3_factory,
		        destination: "_TopPanelSkin_Group1",
		        propertyName: "mxmlContent",
		        position: "after",
		        relativeTo: ["topGroupMask"]
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        name: "alpha",
		        value: 0.5
		      })
		    ]
		  })
		];







		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 36 - 102

        /* Define the skin elements that should not be colorized. 
        For panel, border and title background are skinned, but the content area and title text are not. */
        static private const exclusions:Array = ["background", "titleDisplay", "contentGroup", "controlBarGroup"];
        
        /**
         * @private
         */  
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }
        
        /**
         * @private
         */
        override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
        {
  
            
            dropShadow.visible = getStyle("dropShadowVisible");
            
            var cr:Number = getStyle("cornerRadius");
            var withControls:Boolean = 
                (currentState == "disabledWithControlBar" || 
                 currentState == "normalWithControlBar" || currentState=="normal");
            
            if (cornerRadius != cr)
            {
                cornerRadius = cr;
                
                dropShadow.tlRadius = cornerRadius;
                dropShadow.trRadius = cornerRadius;
                dropShadow.blRadius = withControls ? cornerRadius : 0;
                dropShadow.brRadius = withControls ? cornerRadius : 0;
                
                setPartCornerRadii(topMaskRect, withControls); 
                setPartCornerRadii(background, withControls);                
            }
            
            if (bottomMaskRect) setPartCornerRadii(bottomMaskRect, withControls); 

            backgroundFill.color = getStyle("backgroundColor");
            backgroundFill.alpha = getStyle("backgroundAlpha");
            
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
        
        /**
         * @private
         */  
        private function setPartCornerRadii(target:Rect, includeBottom:Boolean):void
        {            
            target.topLeftRadiusX = cornerRadius;
            target.topRightRadiusX = cornerRadius;
            target.bottomLeftRadiusX = includeBottom ? cornerRadius : 0;
            target.bottomRightRadiusX = includeBottom ? cornerRadius : 0;
        }
        [Bindable]
        private var cornerRadius:Number;
    

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _TopPanelSkin_RectangularDropShadow1_i() : spark.primitives.RectangularDropShadow
{
	var temp : spark.primitives.RectangularDropShadow = new spark.primitives.RectangularDropShadow();
	temp.blurX = 20;
	temp.blurY = 20;
	temp.alpha = 0.32;
	temp.distance = 11;
	temp.angle = 90;
	temp.color = 0;
	temp.left = 0;
	temp.top = 0;
	temp.right = 0;
	temp.bottom = 0;
	temp.id = "dropShadow";
	if (!temp.document) temp.document = this;
	dropShadow = temp;
	mx.binding.BindingManager.executeBindings(this, "dropShadow", dropShadow);
	return temp;
}

private function _TopPanelSkin_Rect1_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 2;
	temp.top = 2;
	temp.right = 2;
	temp.height = 100;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.fill = _TopPanelSkin_SolidColor1_c();
	temp.initialized(this, "lightTitle")
	lightTitle = temp;
	mx.binding.BindingManager.executeBindings(this, "lightTitle", lightTitle);
	return temp;
}

private function _TopPanelSkin_SolidColor1_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 16777215;
	temp.alpha = 1;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Group1_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.left = 0;
	temp.right = 0;
	temp.top = 0;
	temp.bottom = 0;
	temp.mxmlContent = [_TopPanelSkin_Group2_i(), _TopPanelSkin_Rect4_i(), _TopPanelSkin_Group4_i()];
	temp.id = "_TopPanelSkin_Group1";
	if (!temp.document) temp.document = this;
	_TopPanelSkin_Group1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_TopPanelSkin_Group1", _TopPanelSkin_Group1);
	return temp;
}

private function _TopPanelSkin_Group2_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.left = 1;
	temp.top = 1;
	temp.right = 1;
	temp.bottom = 1;
	temp.mxmlContent = [_TopPanelSkin_Rect2_i()];
	temp.id = "topGroupMask";
	if (!temp.document) temp.document = this;
	topGroupMask = temp;
	mx.binding.BindingManager.executeBindings(this, "topGroupMask", topGroupMask);
	return temp;
}

private function _TopPanelSkin_Rect2_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.top = 0;
	temp.right = 0;
	temp.bottom = 0;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.fill = _TopPanelSkin_SolidColor2_c();
	temp.initialized(this, "topMaskRect")
	topMaskRect = temp;
	mx.binding.BindingManager.executeBindings(this, "topMaskRect", topMaskRect);
	return temp;
}

private function _TopPanelSkin_SolidColor2_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.alpha = 0;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Group3_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.left = 1;
	temp.top = 1;
	temp.right = 1;
	temp.bottom = 1;
	temp.mxmlContent = [_TopPanelSkin_Rect3_i()];
	temp.id = "bottomGroupMask";
	if (!temp.document) temp.document = this;
	bottomGroupMask = temp;
	mx.binding.BindingManager.executeBindings(this, "bottomGroupMask", bottomGroupMask);
	return temp;
}

private function _TopPanelSkin_Rect3_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.top = 0;
	temp.right = 0;
	temp.bottom = 0;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.fill = _TopPanelSkin_SolidColor3_c();
	temp.initialized(this, "bottomMaskRect")
	bottomMaskRect = temp;
	mx.binding.BindingManager.executeBindings(this, "bottomMaskRect", bottomMaskRect);
	return temp;
}

private function _TopPanelSkin_SolidColor3_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.alpha = 0;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Rect4_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 1;
	temp.top = 1;
	temp.right = 1;
	temp.bottom = 1;
	temp.fill = _TopPanelSkin_SolidColor4_i();
	temp.initialized(this, "background")
	background = temp;
	mx.binding.BindingManager.executeBindings(this, "background", background);
	return temp;
}

private function _TopPanelSkin_SolidColor4_i() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 16777215;
	backgroundFill = temp;
	mx.binding.BindingManager.executeBindings(this, "backgroundFill", backgroundFill);
	return temp;
}

private function _TopPanelSkin_Group4_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.left = 1;
	temp.right = 1;
	temp.top = 1;
	temp.bottom = 1;
	temp.layout = _TopPanelSkin_VerticalLayout1_c();
	temp.mxmlContent = [_TopPanelSkin_Group6_i()];
	temp.id = "contents";
	if (!temp.document) temp.document = this;
	contents = temp;
	mx.binding.BindingManager.executeBindings(this, "contents", contents);
	return temp;
}

private function _TopPanelSkin_VerticalLayout1_c() : spark.layouts.VerticalLayout
{
	var temp : spark.layouts.VerticalLayout = new spark.layouts.VerticalLayout();
	temp.gap = 0;
	temp.horizontalAlign = "justify";
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Group5_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.mxmlContent = [_TopPanelSkin_Rect5_i(), _TopPanelSkin_Rect6_i(), _TopPanelSkin_Label1_i()];
	temp.id = "topGroup";
	if (!temp.document) temp.document = this;
	topGroup = temp;
	mx.binding.BindingManager.executeBindings(this, "topGroup", topGroup);
	return temp;
}

private function _TopPanelSkin_Rect5_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.right = 0;
	temp.top = 0;
	temp.bottom = 0;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.stroke = _TopPanelSkin_LinearGradientStroke1_c();
	temp.initialized(this, "tbHilite")
	tbHilite = temp;
	mx.binding.BindingManager.executeBindings(this, "tbHilite", tbHilite);
	return temp;
}

private function _TopPanelSkin_LinearGradientStroke1_c() : mx.graphics.LinearGradientStroke
{
	var temp : mx.graphics.LinearGradientStroke = new mx.graphics.LinearGradientStroke();
	temp.rotation = 90;
	temp.weight = 1;
	temp.entries = [_TopPanelSkin_GradientEntry1_c(), _TopPanelSkin_GradientEntry2_c()];
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_GradientEntry1_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 15395562;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_GradientEntry2_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 14277081;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Rect6_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.right = 0;
	temp.height = 1;
	temp.bottom = 0;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.fill = _TopPanelSkin_SolidColor5_c();
	temp.initialized(this, "tbDiv")
	tbDiv = temp;
	mx.binding.BindingManager.executeBindings(this, "tbDiv", tbDiv);
	return temp;
}

private function _TopPanelSkin_SolidColor5_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 12632256;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Label1_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.maxDisplayedLines = 1;
	temp.left = 9;
	temp.right = 3;
	temp.top = 1;
	temp.bottom = 0;
	temp.minHeight = 30;
	temp.setStyle("verticalAlign", "middle");
	temp.setStyle("textAlign", "start");
	temp.setStyle("fontWeight", "bold");
	temp.id = "titleDisplay";
	if (!temp.document) temp.document = this;
	titleDisplay = temp;
	mx.binding.BindingManager.executeBindings(this, "titleDisplay", titleDisplay);
	return temp;
}

private function _TopPanelSkin_Group6_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.minWidth = 0;
	temp.minHeight = 0;
	temp.id = "contentGroup";
	if (!temp.document) temp.document = this;
	contentGroup = temp;
	mx.binding.BindingManager.executeBindings(this, "contentGroup", contentGroup);
	return temp;
}

private function _TopPanelSkin_Group7_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.minWidth = 0;
	temp.minHeight = 0;
	temp.mxmlContent = [_TopPanelSkin_Group8_i(), _TopPanelSkin_Group9_i()];
	temp.id = "bottomGroup";
	if (!temp.document) temp.document = this;
	bottomGroup = temp;
	mx.binding.BindingManager.executeBindings(this, "bottomGroup", bottomGroup);
	return temp;
}

private function _TopPanelSkin_Group8_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.left = 0;
	temp.right = 0;
	temp.top = 0;
	temp.bottom = 0;
	temp.mxmlContent = [_TopPanelSkin_Rect7_c(), _TopPanelSkin_Rect8_c(), _TopPanelSkin_Rect9_c()];
	temp.id = "_TopPanelSkin_Group8";
	if (!temp.document) temp.document = this;
	_TopPanelSkin_Group8 = temp;
	mx.binding.BindingManager.executeBindings(this, "_TopPanelSkin_Group8", _TopPanelSkin_Group8);
	return temp;
}

private function _TopPanelSkin_Rect7_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.right = 0;
	temp.top = 0;
	temp.height = 1;
	temp.alpha = 0.22;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.fill = _TopPanelSkin_SolidColor6_c();
	temp.initialized(this, null)
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_SolidColor6_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 0;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Rect8_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.right = 0;
	temp.top = 1;
	temp.bottom = 0;
	temp.stroke = _TopPanelSkin_LinearGradientStroke2_c();
	temp.initialized(this, null)
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_LinearGradientStroke2_c() : mx.graphics.LinearGradientStroke
{
	var temp : mx.graphics.LinearGradientStroke = new mx.graphics.LinearGradientStroke();
	temp.rotation = 90;
	temp.weight = 1;
	temp.entries = [_TopPanelSkin_GradientEntry3_c(), _TopPanelSkin_GradientEntry4_c()];
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_GradientEntry3_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 15066597;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_GradientEntry4_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 14211288;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Rect9_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 1;
	temp.right = 1;
	temp.top = 2;
	temp.bottom = 1;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.fill = _TopPanelSkin_LinearGradient1_c();
	temp.initialized(this, null)
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_LinearGradient1_c() : mx.graphics.LinearGradient
{
	var temp : mx.graphics.LinearGradient = new mx.graphics.LinearGradient();
	temp.rotation = 90;
	temp.entries = [_TopPanelSkin_GradientEntry5_c(), _TopPanelSkin_GradientEntry6_c()];
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_GradientEntry5_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 14342874;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_GradientEntry6_c() : mx.graphics.GradientEntry
{
	var temp : mx.graphics.GradientEntry = new mx.graphics.GradientEntry();
	temp.color = 12961221;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Group9_i() : spark.components.Group
{
	var temp : spark.components.Group = new spark.components.Group();
	temp.left = 0;
	temp.right = 0;
	temp.top = 1;
	temp.bottom = 1;
	temp.minWidth = 0;
	temp.minHeight = 0;
	temp.layout = _TopPanelSkin_HorizontalLayout1_c();
	temp.id = "controlBarGroup";
	if (!temp.document) temp.document = this;
	controlBarGroup = temp;
	mx.binding.BindingManager.executeBindings(this, "controlBarGroup", controlBarGroup);
	return temp;
}

private function _TopPanelSkin_HorizontalLayout1_c() : spark.layouts.HorizontalLayout
{
	var temp : spark.layouts.HorizontalLayout = new spark.layouts.HorizontalLayout();
	temp.paddingLeft = 10;
	temp.paddingRight = 10;
	temp.paddingTop = 7;
	temp.paddingBottom = 7;
	temp.gap = 10;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_Rect10_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 5;
	temp.right = 5;
	temp.top = 0;
	temp.height = 5;
	temp.filters = [_TopPanelSkin_BlurFilter1_c()];
	temp.fill = _TopPanelSkin_SolidColor7_c();
	temp.initialized(this, "titleLight")
	titleLight = temp;
	mx.binding.BindingManager.executeBindings(this, "titleLight", titleLight);
	return temp;
}

private function _TopPanelSkin_BlurFilter1_c() : spark.filters.BlurFilter
{
	var temp : spark.filters.BlurFilter = new spark.filters.BlurFilter();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _TopPanelSkin_SolidColor7_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 16777215;
	temp.alpha = 0.3;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}


	//	binding mgmt
    private function _TopPanelSkin_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            null,
            null,
            "topGroup.mask"
            , "topGroupMask");

        result[1] = new mx.binding.Binding(this,
            null,
            null,
            "_TopPanelSkin_Group8.mask"
            , "bottomGroupMask");

        result[2] = new mx.binding.Binding(this,
            function():Number
            {

                return (cornerRadius);
            },
            null,
            "titleLight.radiusX"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (TopPanelSkin)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
