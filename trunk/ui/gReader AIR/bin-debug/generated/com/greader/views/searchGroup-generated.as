
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    com.greader.views
 *  Class:      searchGroup
 *  Source:     C:\Documents and Settings\zjp\workspace\gReader AIR\src\com\greader\views\searchGroup.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.04.02 12:15:25 CST
 */

package com.greader.views
{

import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.FocusEvent;
import flash.events.KeyboardEvent;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.graphics.SolidColor;
import mx.styles.*;
import spark.components.Group;
import spark.components.TextInput;
import spark.events.TextOperationEvent;
import spark.filters.BlurFilter;
import spark.layouts.BasicLayout;
import spark.primitives.Rect;



		[Event(name="search", type="com.greader.event.SearchEvent")]
		[Event(name="focusText",type="com.greader.event.FocusTextEvent")]
	

//  begin class def
public class searchGroup
    extends spark.components.Group
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var container : spark.components.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var titleLight : spark.primitives.Rect;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function searchGroup()
    {
        super();





        // layer initializers

       
        // properties
        this.width = 280;
        this.height = 38;
        this.layout = _searchGroup_BasicLayout1_c();
        this.mxmlContent = [_searchGroup_Rect1_c(), _searchGroup_Rect2_i(), _searchGroup_TextInput1_i()];


        // events
        this.addEventListener("creationComplete", ___searchGroup_Group1_creationComplete);
        this.addEventListener("focusIn", ___searchGroup_Group1_focusIn);












    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 17 - 74

			import com.greader.event.FocusTextEvent;
			import com.greader.event.SearchEvent;
			
			import flashx.textLayout.formats.TextLayoutFormat;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			
			import spark.events.TextOperationEvent;
			import spark.filters.BlurFilter;
			import spark.filters.DropShadowFilter;
			
			protected function richeditabletext1_changeHandler(event:TextOperationEvent):void
			{
				if(container.text.length>=2)
				{
					var evt:SearchEvent=new SearchEvent(container.text);
					dispatchEvent(evt);
				}
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				var dFilter:spark.filters.DropShadowFilter=new spark.filters.DropShadowFilter;
				dFilter.inner=true;			
				dFilter.color=0x000000;
				dFilter.angle=65;	
				dFilter.distance=1;
				container.filters=[dFilter];
				this.addEventListener(FocusTextEvent.FOCUS_TEXT,toTextInput);
				container.text="在此输入关键字搜索";
				container.selectAll();				
			}

			protected function toTextInput(event:FocusTextEvent):void
			{
					container.setFocus();
					container.selectRange(container.text.length,container.text.length);
			}

			protected function container_keyDownHandler(event:KeyboardEvent):void
			{							
				
				//dispatchEvent(event);
			}

			protected function group1_focusInHandler(event:FocusEvent):void
			{
				container.setFocus();
			}
			
			public function get searchtext():String
			{
				return container.text;
			}
		

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _searchGroup_BasicLayout1_c() : spark.layouts.BasicLayout
{
	var temp : spark.layouts.BasicLayout = new spark.layouts.BasicLayout();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _searchGroup_Rect1_c() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.top = 0;
	temp.right = 0;
	temp.bottom = 0;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.alpha = 0.9;
	temp.fill = _searchGroup_SolidColor1_c();
	temp.initialized(this, null)
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _searchGroup_SolidColor1_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 2709161;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _searchGroup_Rect2_i() : spark.primitives.Rect
{
	var temp : spark.primitives.Rect = new spark.primitives.Rect();
	temp.left = 0;
	temp.right = 0;
	temp.top = 0;
	temp.height = 3;
	temp.radiusX = 10;
	temp.radiusY = 10;
	temp.filters = [_searchGroup_BlurFilter1_c()];
	temp.fill = _searchGroup_SolidColor2_c();
	temp.initialized(this, "titleLight")
	titleLight = temp;
	mx.binding.BindingManager.executeBindings(this, "titleLight", titleLight);
	return temp;
}

private function _searchGroup_BlurFilter1_c() : spark.filters.BlurFilter
{
	var temp : spark.filters.BlurFilter = new spark.filters.BlurFilter();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _searchGroup_SolidColor2_c() : mx.graphics.SolidColor
{
	var temp : mx.graphics.SolidColor = new mx.graphics.SolidColor();
	temp.color = 16777215;
	temp.alpha = 0.6;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _searchGroup_TextInput1_i() : spark.components.TextInput
{
	var temp : spark.components.TextInput = new spark.components.TextInput();
	temp.left = 10;
	temp.right = 10;
	temp.verticalCenter = "middle";
	temp.top = 20;
	temp.bottom = 10;
	temp.setStyle("fontWeight", "bold");
	temp.setStyle("textAlign", "center");
	temp.setStyle("borderVisible", false);
	temp.setStyle("fontFamily", "微软雅黑");
	temp.setStyle("color", 0);
	temp.setStyle("fontSize", 14);
	temp.addEventListener("change", __container_change);
	temp.addEventListener("keyDown", __container_keyDown);
	temp.id = "container";
	if (!temp.document) temp.document = this;
	container = temp;
	mx.binding.BindingManager.executeBindings(this, "container", container);
	return temp;
}

/**
 * @private
 **/
public function __container_change(event:spark.events.TextOperationEvent):void
{
	richeditabletext1_changeHandler(event)
}

/**
 * @private
 **/
public function __container_keyDown(event:flash.events.KeyboardEvent):void
{
	container_keyDownHandler(event)
}

/**
 * @private
 **/
public function ___searchGroup_Group1_creationComplete(event:mx.events.FlexEvent):void
{
	group1_creationCompleteHandler(event)
}

/**
 * @private
 **/
public function ___searchGroup_Group1_focusIn(event:flash.events.FocusEvent):void
{
	group1_focusInHandler(event)
}





    //  embed carrier vars
    //  end embed carrier vars


//  end class def
}

//  end package def
}
