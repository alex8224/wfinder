
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    com.greader.views
 *  Class:      Top10Show
 *  Source:     C:\Documents and Settings\zjp\workspace\gReader AIR\src\com\greader\views\Top10Show.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.04.02 12:15:25 CST
 */

package com.greader.views
{

import com.greader.views.render.Top10Render;
import com.greader.views.skin.TopPanelSkin;
import com.greader.views.skin.listskin;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.collections.IList;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.effects.Zoom;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.styles.*;
import spark.components.List;
import spark.components.Panel;
import spark.components.VGroup;
import spark.layouts.BasicLayout;



		[Event(name="execute", type="com.greader.event.ExecuteEvent")]
	

//  begin class def
public class Top10Show
    extends spark.components.Panel
    implements mx.binding.IBindingClient
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var hideEffect : mx.effects.Zoom;

    [Bindable]
	/**
 * @private
 **/
    public var showEfft : mx.effects.Zoom;

    [Bindable]
	/**
 * @private
 **/
    public var toplist : spark.components.List;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function Top10Show()
    {
        super();



		var bindings:Array = _Top10Show_bindingsSetup();
		var watchers:Array = [];

		var target:Object = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_com_greader_views_Top10ShowWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					function(propertyName:String):* { return Top10Show[propertyName]; },
					bindings,
					watchers);

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.width = 350;
        this.height = 400;
        this.visible = false;
        this.layout = _Top10Show_BasicLayout1_c();
        this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_Top10Show_Array1_c);
        _Top10Show_Zoom2_i();
        _Top10Show_Zoom1_i();


        // events
        this.addEventListener("creationComplete", ___Top10Show_Panel1_creationComplete);










		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings
		//	initialize component styles
		if (!this.styleDeclaration)
		{
			this.styleDeclaration = new CSSStyleDeclaration(null, styleManager);
		}

		this.styleDeclaration.defaultFactory = function():void
		{
			this.backgroundAlpha = 0.8;
			this.backgroundColor = 0;
			this.skinClass = com.greader.views.skin.TopPanelSkin;
			this.cornerRadius = 10;
		};



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 25 - 78

		import com.greader.controller.TestSqlCommand;
		import com.greader.event.ExecuteEvent;
		import com.greader.views.render.Top10Render;
		import com.greader.views.render.listitemrender;
		import com.greader.views.skin.listskin;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.events.FlexEvent;
		import mx.managers.PopUpManager;
		
		import spark.components.PopUpAnchor;
		[Bindable]
		public var resultSet:ArrayCollection=new ArrayCollection;
		public var conn:TestSqlCommand=null;
		public var itemDbHandler:Function;
		private static var keyMap:Object={48:0,49:1,50:2,51:3,52:4,53:5,54:6,55:7,56:8,57:9};

		protected function panel1_creationCompleteHandler(event:FlexEvent):void
		{
			this.addEventListener(KeyboardEvent.KEY_UP,keyHandler);
			this.stage.focus=this;
			var data:Array=conn.queryTop10();
			resultSet.removeAll();
			for(var i:int=0;i<data.length;i++)
			{
				resultSet.addItem(data[i]);
				data[i].seq=i;
			}
			toplist.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			this.visible=true;
		}
		
		private function keyHandler(event:KeyboardEvent):void
		{
			if(event.keyCode==27)
			{
				PopUpManager.removePopUp(this);
			}
			
			if(keyMap[event.keyCode]!=null)
			{
				if(itemDbHandler!=null)
				{
					itemDbHandler(resultSet.getItemAt(keyMap[event.keyCode]));
					PopUpManager.removePopUp(this);
					this.dispatchEvent(new ExecuteEvent());
				}
			}
			
			event.preventDefault();
		}
	

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _Top10Show_Zoom2_i() : mx.effects.Zoom
{
	var temp : mx.effects.Zoom = new mx.effects.Zoom();
	temp.zoomWidthTo = 0;
	temp.zoomHeightTo = 0;
	temp.zoomWidthFrom = 1;
	temp.zoomHeightFrom = 1;
	temp.duration = 300;
	hideEffect = temp;
	mx.binding.BindingManager.executeBindings(this, "hideEffect", hideEffect);
	return temp;
}

private function _Top10Show_Zoom1_i() : mx.effects.Zoom
{
	var temp : mx.effects.Zoom = new mx.effects.Zoom();
	temp.zoomWidthTo = 1;
	temp.zoomHeightTo = 1;
	temp.zoomWidthFrom = 0;
	temp.zoomHeightFrom = 0;
	temp.duration = 500;
	showEfft = temp;
	mx.binding.BindingManager.executeBindings(this, "showEfft", showEfft);
	return temp;
}

private function _Top10Show_BasicLayout1_c() : spark.layouts.BasicLayout
{
	var temp : spark.layouts.BasicLayout = new spark.layouts.BasicLayout();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Show_Array1_c() : Array
{
	var temp : Array = [_Top10Show_VGroup1_c()];
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Show_VGroup1_c() : spark.components.VGroup
{
	var temp : spark.components.VGroup = new spark.components.VGroup();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.x = 0;
	temp.y = 20;
	temp.verticalAlign = "middle";
	temp.horizontalAlign = "center";
	temp.mxmlContent = [_Top10Show_List1_i()];
	temp.setStyle("color", 16777215);
	if (!temp.document) temp.document = this;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _Top10Show_List1_i() : spark.components.List
{
	var temp : spark.components.List = new spark.components.List();
	temp.height = 391;
	temp.percentWidth = 98.0;
	temp.itemRenderer = _Top10Show_ClassFactory1_c();
	temp.setStyle("skinClass", com.greader.views.skin.listskin);
	temp.setStyle("borderVisible", false);
	temp.id = "toplist";
	if (!temp.document) temp.document = this;
	toplist = temp;
	mx.binding.BindingManager.executeBindings(this, "toplist", toplist);
	return temp;
}

private function _Top10Show_ClassFactory1_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = com.greader.views.render.Top10Render;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

/**
 * @private
 **/
public function ___Top10Show_Panel1_creationComplete(event:mx.events.FlexEvent):void
{
	panel1_creationCompleteHandler(event)
}


	//	binding mgmt
    private function _Top10Show_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            null,
            function(_sourceFunctionReturnValue:*):void
            {
                this.setStyle("showEffect", _sourceFunctionReturnValue);
            },
            "this.showEffect"
            , "showEfft");

        result[1] = new mx.binding.Binding(this,
            null,
            function(_sourceFunctionReturnValue:*):void
            {
                this.setStyle("removedEffect", _sourceFunctionReturnValue);
            },
            "this.removedEffect"
            , "hideEffect");

        result[2] = new mx.binding.Binding(this,
            null,
            null,
            "toplist.dataProvider"
            , "resultSet");


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (Top10Show)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
