
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    com.greader.views.skin
 *  Class:      VScrollBarSkin
 *  Source:     C:\Documents and Settings\zjp\workspace\gReader AIR\src\com\greader\views\skin\VScrollBarSkin.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.03.29 17:44:59 CST
 */

package com.greader.views.skin
{

import com.greader.views.skin.BtnSkin;
import com.greader.views.skin.DownBtnSkin;
import com.greader.views.skin.ThumbBtnSkin;
import com.greader.views.skin.UpBtnSkin;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.IStateClient2;
import mx.core.mx_internal;
import mx.filters.*;
import mx.states.SetProperty;
import mx.states.State;
import mx.styles.*;
import spark.components.Button;
import spark.skins.SparkSkin;


 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.VScrollBar")]
		
[States("normal", "disabled", "inactive")]

//  begin class def
public class VScrollBarSkin
    extends spark.skins.SparkSkin
    implements mx.core.IStateClient2
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var decrementButton : spark.components.Button;

    [Bindable]
	/**
 * @private
 **/
    public var incrementButton : spark.components.Button;

    [Bindable]
	/**
 * @private
 **/
    public var thumb : spark.components.Button;

    [Bindable]
	/**
 * @private
 **/
    public var track : spark.components.Button;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function VScrollBarSkin()
    {
        super();





        // layer initializers

       
        // properties
        this.minWidth = 10;
        this.minHeight = 35;
        this.mxmlContent = [_VScrollBarSkin_Button1_i(), _VScrollBarSkin_Button2_i(), _VScrollBarSkin_Button3_i(), _VScrollBarSkin_Button4_i()];
        this.currentState = "normal";


        // events



		states = [
		  new State ({
		    name: "normal",
		    overrides: [
		    ]
		  })
		  ,
		  new State ({
		    name: "disabled",
		    overrides: [
		      new mx.states.SetProperty().initializeFromObject({
		        name: "alpha",
		        value: 0.5
		      })
		    ]
		  })
		  ,
		  new State ({
		    name: "inactive",
		    overrides: [
		      new mx.states.SetProperty().initializeFromObject({
		        name: "alpha",
		        value: 0.5
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        target: "thumb",
		        name: "visible",
		        value: false
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        target: "decrementButton",
		        name: "enabled",
		        value: false
		      })
		      ,
		      new mx.states.SetProperty().initializeFromObject({
		        target: "incrementButton",
		        name: "enabled",
		        value: false
		      })
		    ]
		  })
		];









    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 39 - 57

		/* Define the skin elements that should not be colorized. 
		For scroll bar, the skin itself is colorized but the individual parts are not. */
		static private const exclusions:Array = ["track", "thumb", "decrementButton", "incrementButton"];
		
		/**
		 * @private
		 */
		override public function get colorizeExclusions():Array {return exclusions;}
		
		/**
		 * @private
		 */
		override protected function initializationComplete():void
		{
			useChromeColor = true;
			super.initializationComplete();
		}
	

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _VScrollBarSkin_Button1_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.top = 20;
	temp.bottom = 20;
	temp.left = 9;
	temp.focusEnabled = false;
	temp.setStyle("skinClass", com.greader.views.skin.BtnSkin);
	temp.id = "track";
	if (!temp.document) temp.document = this;
	track = temp;
	mx.binding.BindingManager.executeBindings(this, "track", track);
	return temp;
}

private function _VScrollBarSkin_Button2_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.left = 7;
	temp.focusEnabled = false;
	temp.setStyle("skinClass", com.greader.views.skin.ThumbBtnSkin);
	temp.id = "thumb";
	if (!temp.document) temp.document = this;
	thumb = temp;
	mx.binding.BindingManager.executeBindings(this, "thumb", thumb);
	return temp;
}

private function _VScrollBarSkin_Button3_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.top = 0;
	temp.left = 7;
	temp.focusEnabled = false;
	temp.setStyle("skinClass", com.greader.views.skin.UpBtnSkin);
	temp.id = "decrementButton";
	if (!temp.document) temp.document = this;
	decrementButton = temp;
	mx.binding.BindingManager.executeBindings(this, "decrementButton", decrementButton);
	return temp;
}

private function _VScrollBarSkin_Button4_i() : spark.components.Button
{
	var temp : spark.components.Button = new spark.components.Button();
	temp.bottom = 0;
	temp.left = 7;
	temp.focusEnabled = false;
	temp.setStyle("skinClass", com.greader.views.skin.DownBtnSkin);
	temp.id = "incrementButton";
	if (!temp.document) temp.document = this;
	incrementButton = temp;
	mx.binding.BindingManager.executeBindings(this, "incrementButton", incrementButton);
	return temp;
}





    //  embed carrier vars
    //  end embed carrier vars


//  end class def
}

//  end package def
}
