
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    com.greader.views
 *  Class:      DataGroupT
 *  Source:     C:\Documents and Settings\zjp\workspace\gReader AIR\src\com\greader\views\DataGroupT.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.03.11 17:48:18 CST
 */

package com.greader.views
{

import com.greader.views.DataGroupTInnerClass0;
import com.greader.views.skin.TDFPanelSkin;
import flash.accessibility.*;
import flash.data.*;
import flash.debugger.*;
import flash.desktop.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.filesystem.*;
import flash.geom.*;
import flash.html.*;
import flash.html.script.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.collections.IList;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.filters.*;
import mx.styles.*;
import spark.components.DataGroup;
import spark.components.Panel;
import spark.components.Scroller;
import spark.components.Window;
import spark.layouts.BasicLayout;
import spark.layouts.VerticalLayout;



//  begin class def
public class DataGroupT
    extends spark.components.Window
    implements mx.binding.IBindingClient
{

    //  instance variables
/**
 * @private
 **/
    public var _DataGroupT_DataGroup1 : spark.components.DataGroup;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function DataGroupT()
    {
        super();



		var bindings:Array = _DataGroupT_bindingsSetup();
		var watchers:Array = [];

		var target:Object = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_com_greader_views_DataGroupTWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					function(propertyName:String):* { return DataGroupT[propertyName]; },
					bindings,
					watchers);

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.width = 600;
        this.height = 300;
        this.layout = _DataGroupT_BasicLayout1_c();
        this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_DataGroupT_Array1_c);


        // events










		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings



                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 9 - 34

			import mx.collections.ArrayCollection;
			
				public function generateDataProvider(nItems:int = 10000):ArrayCollection {
				var ac:ArrayCollection = new ArrayCollection();
				
				var sources:Array = ['San Francisco', 'New York', 'Vancouver', 'Denver', 'Hong Kong'];
				var destinations:Array = ['London', 'Houston', 'Orlando', 'Los Angeles', 'Seattle'];
				var airlines:Array = ['Green Jet', 'Orange Jet', 'Yellow Jet', 'Blue Jet', 'Red Jet'];
				var dates:Array = ['March 23-29', 'April 23-29', 'May 1-3', 'May 10-13', 'June 6'];
				
				// create a collection of random flights
				for (var i:int = 0; i < nItems; i++){
					var temp:Object = new Object();
					var random:int = Math.random() * 5;
					
					temp.start = sources[random];
					temp.end = destinations[random];
					temp.details = dates[random] + ', ' + airlines[random] + " (Flight " + i + ")";
					ac.addItem(temp);
				}
				
				return ac;
				
			}
		

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
private function _DataGroupT_BasicLayout1_c() : spark.layouts.BasicLayout
{
	var temp : spark.layouts.BasicLayout = new spark.layouts.BasicLayout();
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _DataGroupT_Array1_c() : Array
{
	var temp : Array = [_DataGroupT_Panel1_c()];
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _DataGroupT_Panel1_c() : spark.components.Panel
{
	var temp : spark.components.Panel = new spark.components.Panel();
	temp.title = "DataGroup with Virtual Layout";
	temp.percentWidth = 100.0;
	temp.height = 277;
	temp.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_DataGroupT_Array2_c);
	temp.setStyle("skinClass", com.greader.views.skin.TDFPanelSkin);
	if (!temp.document) temp.document = this;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _DataGroupT_Array2_c() : Array
{
	var temp : Array = [_DataGroupT_Scroller1_c()];
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _DataGroupT_Scroller1_c() : spark.components.Scroller
{
	var temp : spark.components.Scroller = new spark.components.Scroller();
	temp.horizontalCenter = 0;
	temp.top = 10;
	temp.viewport = _DataGroupT_DataGroup1_i();
	if (!temp.document) temp.document = this;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _DataGroupT_DataGroup1_i() : spark.components.DataGroup
{
	var temp : spark.components.DataGroup = new spark.components.DataGroup();
	temp.width = 550;
	temp.height = 150;
	temp.clipAndEnableScrolling = true;
	temp.layout = _DataGroupT_VerticalLayout1_c();
	temp.itemRenderer = _DataGroupT_ClassFactory1_c();
	temp.id = "_DataGroupT_DataGroup1";
	if (!temp.document) temp.document = this;
	_DataGroupT_DataGroup1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_DataGroupT_DataGroup1", _DataGroupT_DataGroup1);
	return temp;
}

private function _DataGroupT_VerticalLayout1_c() : spark.layouts.VerticalLayout
{
	var temp : spark.layouts.VerticalLayout = new spark.layouts.VerticalLayout();
	temp.gap = 5;
	temp.useVirtualLayout = true;
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}

private function _DataGroupT_ClassFactory1_c() : mx.core.ClassFactory
{
	var temp : mx.core.ClassFactory = new mx.core.ClassFactory();
	temp.generator = com.greader.views.DataGroupTInnerClass0;
	temp.properties = {outerDocument: this};
	mx.binding.BindingManager.executeBindings(this, "temp", temp);
	return temp;
}


	//	binding mgmt
    private function _DataGroupT_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():mx.collections.IList
            {

                return (generateDataProvider(9000));
            },
            null,
            "_DataGroupT_DataGroup1.dataProvider"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (DataGroupT)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;



    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
